
@inproceedings{Chlipala2008,
  author = {Chlipala, Adam},
  booktitle = {{{ACM SIGPLAN Notices}}},
  doi = {10.1145/1411204.1411226},
  file = {/home/uma/references/papers/parametric-higher-order-abstract-syntax-for-mechanized-semantics.pdf},
  month = sep,
  pages = {143-156},
  title = {Parametric {{Higher}}-{{Order Abstract Syntax}} for {{Mechanized Semantics}}},
  volume = {43},
  year = {2008}
}

@phdthesis{Dilmore2019,
  author = {Dilmore, Eric},
  school = {School of Computing Science, University of Glasgow},
  title = {Pi-{{Calculus Session Types}} in {{Coq}}},
  type = {Master's {{Thesis}}},
  year = {2019}
}

@article{Dreyer2018,
  acmid = {3158154},
  articleno = {66},
  author = {Jung, Ralf and Jourdan, Jacques-Henri and Krebbers, Robbert and Dreyer, Derek},
  doi = {10.1145/3158154},
  file = {/home/uma/.zotero/data/storage/UK6JFQCT/Jung et al. - 2017 - RustBelt Securing the Foundations of the Rust Pro.pdf},
  issn = {2475-1421},
  issue_date = {January 2018},
  journal = {Proc. ACM Program. Lang.},
  keywords = {concurrency,logical relations,Rust,separation logic,type systems},
  location = {New York, NY, USA},
  month = dec,
  number = {POPL},
  numpages = {34},
  pages = {66:1-66:34},
  publisher = {{ACM}},
  title = {{{RustBelt}}: {{Securing}} the {{Foundations}} of the {{Rust Programming Language}}},
  volume = {2},
  year = {2017}
}

@inproceedings{Giunti2010,
  abstract = {We present a reconstruction of session types in a conventional pi calculus where types are qualified as linear or unrestricted. Linearly typed communication channels are guaranteed to occur in exactly one thread, possibly multiple times. We equip types with a constructor that denotes the two ends of a same communication channel. In order to assess the flexibility of the new type system, we provide three distinct encodings (from the linear lambda calculus, from the linear pi calculus, and from the pi calculus with polarized variables) into our system. For each language we present operational and typing correspondences, showing that our system effectively subsumes the linear pi calculus as well as foregoing works on session types.},
  author = {Giunti, Marco and Vasconcelos, Vasco T.},
  booktitle = {{{CONCUR}} 2010 - {{Concurrency Theory}}},
  editor = {Gastin, Paul and Laroussinie, Fran{\c c}ois},
  isbn = {978-3-642-15375-4},
  pages = {432-446},
  publisher = {{Springer Berlin Heidelberg}},
  title = {A {{Linear Account}} of {{Session Types}} in the {{Pi Calculus}}},
  year = {2010}
}

@article{Kobayashi1999,
  author = {Kobayashi, Naoki and Pierce, Benjamin and N. Turner, David},
  doi = {10.1145/330249.330251},
  journal = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  month = dec,
  pages = {914-947},
  title = {Linearity and the {{Pi}}-{{Calculus}}},
  volume = {21},
  year = {1999}
}

@article{Petz,
  author = {Petz, Adam},
  file = {/home/uma/.zotero/data/storage/6SG39KD6/Petz - A Semantics for Attestation Protocols using Sessio.pdf},
  keywords = {check},
  language = {en},
  pages = {61},
  title = {A {{Semantics}} for {{Attestation Protocols}} Using {{Session Types}} in {{Coq}}}
}

@inproceedings{Toninho2011,
  author = {Toninho, Bernardo and Caires, Lu{\'i}s and Pfenning, Frank},
  booktitle = {Proceedings of the 13th {{International ACM SIGPLAN Symposium}} on {{Principles}} and {{Practices}} of {{Declarative Programming}}},
  doi = {10.1145/2003476.2003499},
  isbn = {978-1-4503-0776-5},
  keywords = {process calculus,type theory},
  pages = {161-172},
  publisher = {{ACM}},
  series = {{{PPDP}} '11},
  title = {Dependent {{Session Types}} via {{Intuitionistic Linear Type Theory}}},
  year = {2011}
}

@incollection{Vasconcelos2009,
  author = {Vasconcelos, Vasco},
  booktitle = {Information and {{Computation}}},
  doi = {10.1007/978-3-642-01918-0_4},
  file = {/home/uma/references/papers/fundamentals-of-session-types.pdf},
  month = may,
  pages = {158-186},
  title = {Fundamentals of {{Session Types}}},
  volume = {217},
  year = {2009}
}


